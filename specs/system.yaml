swagger: '2.0'
info:
  version: 1.0.0
  title: Rundeck
  license:
    name: MIT
basePath: '/api/26'
schemes:
- http
produces:
- application/json
consumes:
- application/json

paths:
  /system/info:
    get:
      summary: Get Rundeck server information and stats
      operationId: systemInfoGet
      tags:
      - system
      responses:
        '200':
          description: System info response
          schema: {$ref: '#/definitions/SystemInfo'}

  /system/logstorage:
    get:
      summary: Get Log Storage information and stats
      operationId: systemLogStorageInfoGet
      tags:
      - system
      - log
      responses:
        '200':
          description: Expected reponse to a valid request
          schema: {$ref: '#/definitions/LogStorage'}
  
  /system/logstorage/incomplete:
    get:
      summary: List all executions with incomplete log storage
      operationId: systemIncompleteLogStorageExecutionsGet
      tags:
      - system
      - execution
      - log
      responses:
        '200':
          description: Expected response to a valid request
          schema: {$ref: '#/definitions/IncompleteLogExecutions'}
  
  /system/logstorage/incomplete/resume:
    post:
      summary: Resume processing incomplete Log Storage uploads
      operationId: systemIncompleteLogStorageExecutionsResume
      tags:
      - system
      - execution
      - log
      responses:
        '200':
          description: Expected response to a valid request
          schema:
            properties:
              resumed: {type: boolean}

  /system/executions/enable:
    post:
      summary: Enables executions, allowing adhoc and manual and scheduled jobs to be run
      operationId: systemExecutionsEnable
      tags:
      - system
      - execution
      responses:
        '200':
          description: Expected response to a valid request
          schema:
            properties:
              executionMode: {type: string}

  /system/executions/disable:
    post:
      summary: Disables executions, preventing adhoc and manual and scheduled jobs from running.
      operationId: systemExecutionsDisable
      tags:
      - system
      - execution
      responses:
        '200':
          description: Expected response to a valid request
          schema:
            properties:
              executionMode: {type: string}
  
  /scheduler/takeover:
    put:
      summary: Tell a Rundeck server in cluster mode to claim all scheduled jobs from another cluster server
      operationId:  systemSchedulerTakeover
      tags:
      - scheduler
      - cluster
      - job
      parameters:
      - name: SchedulerTakeoverRequest
        in: body
        schema:
          properties:
            server:
              type: object
              required:
              - uuid
              - all
              properties:
                uuid: {type: string}
                all:  {type: boolean}
            project: {type: string}
            job:
              type: object
              required:
              - id
              properties:
                id: {type: string}

      responses:
        '200':
          description: Expected response to a valid request
          schema: {$ref: '#/definitions/TakeoverScheduleResponse'}

  /scheduler/server/{uuid}/jobs:
    get:
      summary: List the scheduled Jobs with their schedule owned by the cluster server with the specified UUID
      operationId: systemScheduledJobsForServer
      tags:
      - scheduler
      - cluster
      - job
      parameters:
      - name: uuid
        in: path
        required: true
        description: The ID of the user to retrieve profile information for
        type: string
      responses:
        '200':
          description: Expected response to a valid request
          schema: {type: array, items: {$ref: '#/definitions/Job'}}

  /scheduler/jobs:
    get:
      summary: List the scheduled Jobs with their schedule owned by the cluster server
      operationId: systemScheduledJobsList
      tags:
      - scheduler
      - cluster
      - job
      responses:
        '200':
          description: Expected response to a valid request
          schema: {type: array, items: {$ref: '#/definitions/Job'}}

  /system/acl/:
    get:
      summary: List ACL Policies
      operationId: systemAclPolicyList
      tags:
      - system
      - acl
      responses:
        '200':
          description: Expected response to a valid request
          schema: {$ref: '#/definitions/AclList'}

  /system/acl/{policyName}:
    get:
      summary: Retrieve the YAML texas of the ACL Policy file
      operationId: systemAclPolicyGet
      tags:
      - system
      - acl
      parameters:
      - name: policyName
        in: path
        required: true
        description: Policy file name
        type: string
      responses:
        '200':
          description: Expected response to a valid request
          schema: {$ref: '#/definitions/AclPolicyResponse'}
    post:  
      summary: Create a policy
      operationId: systemAclPolicyCreate
      tags:
      - system
      - acl
      parameters:
      - name: policyName
        in: path
        required: True
        description: Policy file name
        type: string
      - name: SystemAclPolicyCreateRequest
        in: body
        schema:
          required:
          - contents
          properties:
            contents:
              type: string
      responses:
        '201':
          description: Created
          schema: {$ref: '#/definitions/AclPolicyResponse'}
        '409':
          description: Conflict
        '400':
          description: Bad Request
          schema: {$ref: '#/definitions/InvalidAclPolicyResponse'}
    put:
      summary: Update policy
      operationId: systemAclPolicyUpdate
      tags:
      - system
      - acl
      parameters:
      - name: policyName
        in: path
        required: True
        description: Policy file name
        type: string
      - name: SystemAclPolicyUpdateRequest
        in: body
        schema:
          required:
          - contents
          properties:
            contents:
              type: string
      responses:
        '200':
          description: Expected response to a valid request
          schema: {$ref: '#/definitions/AclPolicyResponse'}
        '404':
          description: Policy not found
    delete:
      summary: Delete policy
      operationId: systemAclPolicyDelete
      tags:
      - system
      - acl
      parameters:
      - name: policyName
        in: path
        required: True
        description: Policy file name
        type: string
      responses:
        '204':
          description: Policy deleted
        '404':
          description: Policy not found

definitions:
  $ref: definitions.yaml 