swagger: '2.0'
info:
  version: 1.0.0
  title: Rundeck
  license:
    name: MIT
basePath: '/api/26'
schemes:
- http
produces:
- application/json
consumes:
- application/json

paths:
  /execution/{id}:
    get:
      summary: Get the status of an execution by ID
      operationId: executionStatusGet
      tags:
      - execution
      parameters:
      - name: id
        in: path
        required: True
        type: string
      responses:
        '200':
          description: Execution status
          schema: {$ref: '#/definitions/Execution'}
    delete:
      summary: Delete an exeuction by ID
      operationId: executionDelete
      tags:
      - execution
      parameters:
      - name: id
        in: path
        required: True
        type: string
      responses:
        '204':
          description: No content

  /executions/delete:
    post:
      summary: Bulk delete executions
      operationId: executionBulkDelete
      tags:
      - execution
      parameters:
      - name: ExecutionBulkDeleteRequest
        in: body
        required: true
        schema:
          required:
          - ids
          properties:
            ids:
              type: array
              items: {type: string}
      responses:
        '200':
          description: Execution deleted response
          schema: {$ref: '#/definitions/JobExecutionDelete'}

  /execution/{id}/state:
    get:
      summary: Get detail about the node and step state of an execution by ID. The execution can be currently running or completed.
      operationId: executionStateGet
      tags:
      - execution
      parameters:
      - name: id
        in: path
        required: True
        type: string
      responses:
        '200':
          description: Ok

  /execution/{id}/input/files:
    get:
      summary: List input files for an execution
      operationId: executionInputFilesList
      tags:
      - file
      - execution
      parameters:
      - name: id
        in: path
        required: True
        type: string
      responses:
        '200':
          description: List of execution input files
          schema: 
            required:
            - files
            properties:
              files:
                type: array
                items: {$ref: '#/definitions/JobInputFileInfo'}

  /project/{project}/executions/running:
    get:
      summary: List job executions
      operationId: executionListRunning
      tags:
      - project
      - execution
      parameters:
      - name: project
        in: path
        required: True
        description: Project name or * for all projects
        type: string
      responses:
        '200':
          description: List of executions for job
          schema: {$ref: '#/definitions/ExecutionList'}

  /project/{project}/executions:
    get:
      summary: Query for Executions based on Job or Execution details
      operationId: executionQuery
      tags:
      - execution
      parameters:
      - name: project
        in: path
        required: True
        type: string
      - name: statusFilter
        in: query
        type: string
        enum: ['running', 'succeeded', 'failed', 'aborted', 'timedout', 'failed-with-retry', 'scheduled', 'other']
      - name: abortedbyFilter
        in: query
        description: Username who aborted an execution
        type: string
      - name: userFilter
        in: query
        description: Username who started the execution
        type: string
      - name: recentFilter
        in: query
        description: |
          Use a simple text format to filter executions that completed within a period of time. The format is “XY” where X is an integer, and “Y” is one of:
          * h: hour
          * d: day
        type: string
      - name: olderFilter
        in: query
        description: (same format as recentFilter) return executions that completed before the specified relative period of time
        type: string
      - name: begin
        in: query
        description: Specify exact date for earliest execution completion time
        type: string
      - name: adhoc
        in: query
        type: boolean

      

      responses:
        '200':
          description: Success

definitions:
  $ref: definitions.yaml 